Input: arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]
Output: [2,7,14,8] 
Explanation: 
The binary representation of the elements in the array are:
1 = 0001 
3 = 0011 
4 = 0100 
8 = 1000 
The XOR values for queries are:
[0,1] = 1 xor 3 = 2 
[1,2] = 3 xor 4 = 7 
[0,3] = 1 xor 3 xor 4 xor 8 = 14 
[3,3] = 8


My solution:
Time complexity : O(n)
Space complexity :O(n)

class Solution {
public:
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {
        
        vector<int> res;
        
        for(int i=1; i<arr.size(); i++)
        {
            arr[i] ^= arr[i-1];
        }
        
        for(auto q: queries)
        {
            res.push_back(q[0] > 0 ? arr[q[0]-1] ^ arr[q[1]]: arr[q[1]]);
        }
        
        return res;
    }
};
