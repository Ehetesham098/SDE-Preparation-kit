Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

Optimal solution :
Time complexity : O(n)
Space complexity : O(n)

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_set<char> set;
    
		int i = 0, j = 0, n = s.size(), ans = 0;
    
		while( i<n && j<n)
		{
			if(set.find(s[j]) == set.end()) 
			{
				set.insert(s[j++]); 
				ans = max(ans, j-i); 
			}
			else
			{
				set.erase(s[i++]);
			}
		}
        
        return ans;
    }
};
