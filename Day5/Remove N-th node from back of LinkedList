Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.

My solution :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        if(!head)
            return head;
        ListNode *ref = head , *main = head, *prev = NULL;
        
            int c = 0;
            while(c < n)
            {
                ref = ref -> next;
                c++;
            }
            
            while(ref)
            {
                prev = main;
                main = main->next;
                ref = ref -> next;
            }
       
        if(!prev)
            head = main -> next;
        else{ 
            prev -> next = prev -> next -> next;
            main -> next = NULL;
        }
        delete(main);
        
        return head;
    }
};
